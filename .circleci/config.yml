version: 2.1

parameters:
  maintainer:
    type: string
    default: support@solarbotics.com

  repo:
    type: string
    default: solarbotics/arduino-cli

executors:
  python:
    docker:
      - image: circleci/python:3.9
        auth:
          username: $DOCKER_HUB_USERNAME
          password: $DOCKER_HUB_PASSWORD

commands:
  init_env:
    steps:
      - checkout

      - run:
          name: Install dependencies
          command: |
            pip3 install -r requirements.txt

  init_build:
    parameters:
      version:
        type: string
        default: 20.10.2

    steps:
      - setup_remote_docker:
          version: << parameters.version >>

      - run:
          name: Docker Hub login
          command: |
            if [ -n "$DOCKER_HUB_USERNAME" ]; then
              docker login --username $DOCKER_HUB_USERNAME --password $DOCKER_HUB_PASSWORD
            else
              echo "Missing Docker Hub credentials"
              exit 1
            fi

jobs:
  base:
    executor: python

    steps:
      - init_env
      - init_build

      - run:
         name: Build images
         command: |
           mkdir -p tags
           python3 docker-arduino-cli.py \
            build \
              --username $DOCKER_HUB_USERNAME \
              --password $DOCKER_HUB_PASSWORD \
              -r << pipeline.parameters.repo >> \
              -m << pipeline.parameters.maintainer >> \
            base \
              matrix.json > tags/base.json

      - store_artifacts:
          path: tags/base.json

      - persist_to_workspace:
          root: .
          paths:
            - tags/*

  core:
    executor: python

    parameters:
      package:
        type: string
      platform:
        type: string

    steps:
      - init_env
      - init_build

      - attach_workspace:
          at: .

      - run:
         name: Build images
         command: |
           mkdir -p tags
           python3 docker-arduino-cli.py \
            build \
              --username $DOCKER_HUB_USERNAME \
              --password $DOCKER_HUB_PASSWORD \
              -r << pipeline.parameters.repo >> \
              -m << pipeline.parameters.maintainer >> \
            core \
              --package << parameters.package >> \
              --platform << parameters.platform >> \
              matrix.json tags/base.json > tags/<< parameters.package >>-<< parameters.platform >>.json

      - store_artifacts:
          path: tags/<< parameters.package >>-<< parameters.platform >>.json

  docs:
    executor: python

    steps:
      - init_env

      - run:
         name: Build images
         command: |
           mkdir -p docs
           python3 docker-arduino-cli.py \
            build \
              --username $DOCKER_HUB_USERNAME \
              --password $DOCKER_HUB_PASSWORD \
              -r << pipeline.parameters.repo >> \
              -m << pipeline.parameters.maintainer >> \
            docs \
              --output docs/ \
              matrix.json

      - store_artifacts:
          path: docs

  update:
    executor: python

    parameters:
      window:
        type: integer
      limit:
        type: integer
      deploy_key:
        type: string

    steps:
      - init_env

      - add_ssh_keys:
          fingerprints:
            - << parameters.deploy_key >>

      - run:
         name: Update matrix
         command: |
           python3 docker-arduino-cli.py \
            update \
              --token $GITHUB_TOKEN \
              --days << parameters.window >> \
              --limit << parameters.limit >> \
            matrix.json

           if [ -f "message.txt" ]; then
             git config --global user.email "kevin.loney@brainsinjars.com"
             git config --global user.name "easyas314159"
             git commit -F message.txt matrix.json && git push
           else
             echo "No matrix changes to commit"
           fi

workflows:
  version: 2

  update:
    jobs:
      - update:
          name: update
          window: 365
          limit: 1
          deploy_key: "bd:50:c1:71:98:ae:e8:f4:78:f5:c0:a7:b2:0d:6d:59"
          context:
            - github_docker_arduino_cli
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master

  commit:
    jobs:
      - base:
          context:
            - dockerhub

      - docs:
          context:
            - dockerhub
